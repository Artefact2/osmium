#!/usr/bin/env php
<?php
/* Osmium
 * Copyright (C) 2013, 2014 Romain "Artefact2" Dalmaso <artefact2@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

require __DIR__.'/../inc/root.php';

/* Keep in mind, sitemaps should not be bigger than 10 MiB (compressed
 * size), and should not contain more than 50,000 URLs. */
const BATCH_SIZE = 50000;

$proto = \Osmium\get_ini_setting('https_available') && \Osmium\get_ini_setting('https_canonical')
	? 'https' : 'http';
$root = $proto.'://'.\Osmium\get_ini_setting('host').rtrim(\Osmium\get_ini_setting('relative_path'), '/');

/* Sitemap requires ISO8601 */
$fdate = function($ts) { return date('c', $ts); };

$idx = new \DOMDocument();
$si = $idx->appendChild($idx->createElement('sitemapindex'));
$xmlns = $si->appendChild($idx->createAttribute('xmlns'));
$xmlns->appendChild($idx->createTextNode('http://www.sitemaps.org/schemas/sitemap/0.9'));





/* ----- Static pages ----- */

$s = $si->appendChild($idx->createElement('sitemap'));
$loc = $s->appendChild($idx->createElement('loc'));
$loc->appendChild($idx->createTextNode($root.'/sitemap-static.xml.gz'));
$lastmod = $s->appendChild($idx->createElement('lastmod'));
$lastmod->appendChild($idx->createTextNode($fdate(filemtime(__DIR__.'/../inc/root.php'))));

if(\Osmium\get_ini_setting('anonymous_access')) {
	$static = [
		'/',
		'/search',
		'/import',
		'/convert',
		'/login',
		'/resetpassword',
		'/browse/new',
		'/browse/best',
		'/changelog',
		'/about',
		'/help',
		'/help/search',
		'/help/formats',
		'/help/db',
		'/help/api/common',
		'/help/api/loadout-dna',
		'/help/api/loadout-convert',
		'/help/api/loadout-query',
		'/help/api/loadout-attributes',
		'/compare/dps',
		'/privileges',
	];

	if(\Osmium\get_ini_setting('registration_enabled')) {
		$static[] = '/register';
	}
} else {
	$static = [];
}

$subidx = new \DOMDocument();
$urlset = $subidx->appendChild($subidx->createElement('urlset'));
$xmlns = $urlset->appendChild($subidx->createAttribute('xmlns'));
$xmlns->appendChild($subidx->createTextNode('http://www.sitemaps.org/schemas/sitemap/0.9'));

foreach($static as $spage) {
	$url = $urlset->appendChild($subidx->createElement('url'));
	$loc = $url->appendChild($subidx->createElement('loc'));
	$loc->appendChild($subidx->createTextNode($root.$spage));
}

$subidx->formatOutput = true;
$subidx->encoding = 'UTF-8';
file_put_contents(\Osmium\ROOT.'/static/cache/sitemap-static.xml', $subidx->saveXML());

echo ".";

if(!\Osmium\get_ini_setting('anonymous_access')) goto PruneAndCompress;





/* ----- Loadout pages ----- */

$batchq = \Osmium\Db\query_params(
	'SELECT floor(ala.loadoutid / $1), max(updatedate)
	FROM osmium.allowedloadoutsanonymous ala
	JOIN osmium.loadoutslatestrevision llr ON llr.loadoutid = ala.loadoutid
	JOIN osmium.loadouthistory lh ON lh.loadoutid = llr.loadoutid AND lh.revision = llr.latestrevision
	JOIN osmium.loadouts l ON l.loadoutid = ala.loadoutid
	WHERE l.visibility = $2
	GROUP BY floor(ala.loadoutid / $1)
	ORDER BY floor(ala.loadoutid / $1) ASC',
	array(BATCH_SIZE, \Osmium\Fit\VISIBILITY_PUBLIC)
);
while($batch = \Osmium\Db\fetch_row($batchq)) {
	list($i, $maxts) = $batch;
	$fname = 'sitemap-loadouts-'.$i.'.xml';

	echo ".";

	$subidx = new \DOMDocument();
	$urlset = $subidx->appendChild($subidx->createElement('urlset'));
	$xmlns = $urlset->appendChild($subidx->createAttribute('xmlns'));
	$xmlns->appendChild($subidx->createTextNode('http://www.sitemaps.org/schemas/sitemap/0.9'));

	/* Yes, boo */
	$innerq = \Osmium\Db\query_params(
		'SELECT ala.loadoutid, updatedate
		FROM osmium.allowedloadoutsanonymous ala
		JOIN osmium.loadoutslatestrevision llr ON llr.loadoutid = ala.loadoutid
		JOIN osmium.loadouthistory lh ON lh.loadoutid = llr.loadoutid AND lh.revision = llr.latestrevision
		JOIN osmium.loadouts l ON l.loadoutid = ala.loadoutid
		WHERE ala.loadoutid >= $1 AND ala.loadoutid < $2 AND l.visibility = $3
		ORDER BY ala.loadoutid ASC',
		array($i * BATCH_SIZE, ($i + 1) * BATCH_SIZE, \Osmium\Fit\VISIBILITY_PUBLIC)
	);
	while($inner = \Osmium\Db\fetch_row($innerq)) {
		list($loadoutid, $updatedate) = $inner;

		$url = $urlset->appendChild($subidx->createElement('url'));
		$loc = $url->appendChild($subidx->createElement('loc'));
		$loc->appendChild($subidx->createTextNode($root.'/loadout/'.$loadoutid));
		$lastmod = $url->appendChild($subidx->createElement('lastmod'));
		$lastmod->appendChild($subidx->createTextNode($fdate($updatedate)));
	}

	$subidx->formatOutput = true;
	$subidx->encoding = 'UTF-8';
	file_put_contents(\Osmium\ROOT.'/static/cache/'.$fname, $subidx->saveXML());

	$s = $si->appendChild($idx->createElement('sitemap'));
	$loc = $s->appendChild($idx->createElement('loc'));
	$loc->appendChild($idx->createTextNode($root.'/'.$fname.'.gz'));
	$lastmod = $s->appendChild($idx->createElement('lastmod'));
	$lastmod->appendChild($idx->createTextNode($fdate($maxts)));
}

echo "\n";




/* ----- Profile pages ----- */

$batchq = \Osmium\Db\query_params(
	'SELECT floor(a.accountid / $1), max(a.lastlogindate)
	FROM osmium.accounts a
	GROUP BY floor(a.accountid / $1)
	ORDER BY floor(a.accountid / $1) ASC',
	array(BATCH_SIZE)
);
while($batch = \Osmium\Db\fetch_row($batchq)) {
	list($i, $maxts) = $batch;
	$fname = 'sitemap-profiles-'.$i.'.xml';

	echo ".";

	$subidx = new \DOMDocument();
	$urlset = $subidx->appendChild($subidx->createElement('urlset'));
	$xmlns = $urlset->appendChild($subidx->createAttribute('xmlns'));
	$xmlns->appendChild($subidx->createTextNode('http://www.sitemaps.org/schemas/sitemap/0.9'));

	/* Yes, boo */
	$innerq = \Osmium\Db\query_params(
		'SELECT a.accountid, greatest(a.creationdate, a.lastlogindate)
		FROM osmium.accounts a
		WHERE a.accountid >= $1 AND a.accountid < $2
		ORDER BY a.accountid ASC',
		array($i * BATCH_SIZE, ($i + 1) * BATCH_SIZE)
	);
	while($inner = \Osmium\Db\fetch_row($innerq)) {
		list($accountid, $lld) = $inner;

		$url = $urlset->appendChild($subidx->createElement('url'));
		$loc = $url->appendChild($subidx->createElement('loc'));
		$loc->appendChild($subidx->createTextNode($root.'/profile/'.$accountid));
		$lastmod = $url->appendChild($subidx->createElement('lastmod'));
		$lastmod->appendChild($subidx->createTextNode($fdate($lld)));
	}

	$subidx->formatOutput = true;
	$subidx->encoding = 'UTF-8';
	file_put_contents(\Osmium\ROOT.'/static/cache/'.$fname, $subidx->saveXML());

	$s = $si->appendChild($idx->createElement('sitemap'));
	$loc = $s->appendChild($idx->createElement('loc'));
	$loc->appendChild($idx->createTextNode($root.'/'.$fname.'.gz'));
	$lastmod = $s->appendChild($idx->createElement('lastmod'));
	$lastmod->appendChild($idx->createTextNode($fdate($maxts)));
}

echo "\n";




/* ----- DB browser pages ----- */

$dbq = \Osmium\Db\query(
	"SELECT 'type' AS t, typeid AS id FROM eve.invtypes
	UNION
	SELECT 'attribute' AS t, attributeid AS id FROM eve.dgmattribs
	UNION
	SELECT 'effect' AS t, effectid AS id FROM eve.dgmeffects
	UNION
	SELECT 'group' AS t, groupid AS id FROM eve.invgroups
	UNION
	SELECT 'category' AS t, categoryid AS id FROM eve.invcategories
	UNION
	SELECT 'marketgroup' AS t, marketgroupid AS id FROM eve.invmarketgroups
	ORDER BY t ASC, id ASC"
);
$i = 0;
$cnt = 0;
$sdedate = \Osmium\Fit\get_latest_eve_db_version()['reldate'];
$finalize = function() use(&$subidx, &$fname, &$si, &$idx, &$root, &$fdate, &$sdedate) {
	$subidx->formatOutput = true;
	$subidx->encoding = 'UTF-8';
	file_put_contents(\Osmium\ROOT.'/static/cache/'.$fname, $subidx->saveXML());

	$s = $si->appendChild($idx->createElement('sitemap'));
	$loc = $s->appendChild($idx->createElement('loc'));
	$loc->appendChild($idx->createTextNode($root.'/'.$fname.'.gz'));
	$lastmod = $s->appendChild($idx->createElement('lastmod'));
	$lastmod->appendChild($idx->createTextNode($fdate($sdedate)));
};
while($db = \Osmium\Db\fetch_assoc($dbq)) {
	if($cnt % BATCH_SIZE === 0) {
		if($cnt > 0) {
			$finalize();
		}

		
		$fname = 'sitemap-db-'.($i++).'.xml';
		echo ".";

		$subidx = new \DOMDocument();
		$urlset = $subidx->appendChild($subidx->createElement('urlset'));
		$xmlns = $urlset->appendChild($subidx->createAttribute('xmlns'));
		$xmlns->appendChild($subidx->createTextNode('http://www.sitemaps.org/schemas/sitemap/0.9'));
	}

	$url = $urlset->appendChild($subidx->createElement('url'));
	$loc = $url->appendChild($subidx->createElement('loc'));
	$loc->appendChild($subidx->createTextNode($root.'/db/'.$db['t'].'/'.$db['id']));
	$lastmod = $url->appendChild($subidx->createElement('lastmod'));
	$lastmod->appendChild($subidx->createTextNode($fdate($sdedate)));

	++$cnt;
}

if($cnt % BATCH_SIZE !== 0) {
	$finalize();
	echo ".";
}

echo "\n";





/* ----- Delete old sitemaps, compress new sitemaps ----- */
PruneAndCompress:

$idx->formatOutput = true;
$idx->encoding = 'UTF-8';
file_put_contents(\Osmium\ROOT.'/static/cache/sitemap-root.xml', $idx->saveXML());

shell_exec(
	'find '.escapeshellarg(\Osmium\ROOT.'/static/cache')
	.' -maxdepth 1 -name "sitemap-*.xml.gz" -delete'
);

foreach(glob(\Osmium\ROOT.'/static/cache/sitemap-*.xml') as $xmlf) {
	echo ".";
	shell_exec('gzip --best '.escapeshellarg($xmlf));
}

echo "\n";
